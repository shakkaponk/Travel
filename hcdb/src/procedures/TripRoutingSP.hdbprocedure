PROCEDURE "TRIPROUTINGSP" (IN AIRPORTCODEORIGIN NVARCHAR(3), IN AIRPORTCODEDESTINATION NVARCHAR(3), OUT TOTALSEGMENTS BigInt, OUT TOTALDISTANCE Int, OUT TOTALDURATION Int, OUT ROUTING "TRIPROUTING")
   LANGUAGE GRAPH
   SQL SECURITY INVOKER
   --DEFAULT SCHEMA <default_schema_name>
   READS SQL DATA AS
BEGIN
	Graph g = Graph("FLIGHTS");
	Vertex sourceVertex = Vertex(:g, :AIRPORTCODEORIGIN);
	Vertex targetVertex = Vertex(:g, :AIRPORTCODEDESTINATION);
	WeightedPath<BigInt> p = SHORTEST_PATH(:g, :sourceVertex, :targetVertex);
	TOTALSEGMENTS = Length(:p);
	FOREACH e IN EDGES(:p) {
		TOTALDISTANCE = :TOTALDISTANCE + :e."DISTANCE";
		TOTALDURATION = :TOTALDURATION + :e."DURATION";
	}
	ROUTING = SELECT :SEGMENT, :e."AIRPORTCODEORIGIN",  :e."AIRPORTCODEDESTINATION", :e."AIRLINENAME", :e."DISTANCE", :e."DURATION" FOREACH e in EDGES(:p) WITH ORDINALITY AS SEGMENT;
END